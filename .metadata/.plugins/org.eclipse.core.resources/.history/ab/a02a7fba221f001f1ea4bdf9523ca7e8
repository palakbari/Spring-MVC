package in.microsoft.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import in.microsoft.pojos.Cart;
import in.microsoft.pojos.Customer;
import in.microsoft.pojos.Product;
import in.microsoft.utils.DBUtils;

public class CartDAO 
{
	private Connection cn;
	private PreparedStatement pst1;
	private PreparedStatement pst2;
	private PreparedStatement pst3;
	private PreparedStatement pst4;
	private PreparedStatement pst5;
	private PreparedStatement pst6;
	private PreparedStatement pst7;
	private PreparedStatement pst8;
	
	public void addToCart(Product product, Customer customer, int pid, int quantity) throws SQLException, ClassNotFoundException  
	{
		cn = DBUtils.openConnection();
		pst4 = cn.prepareStatement("Select * from product where pro_id = ?");
		pst4.setInt(1, product.getPro_id());
		ResultSet rs = pst4.executeQuery();
		while(rs.next()) 
		{
			product = new Product(rs.getInt("pro_id"), rs.getString("pro_name"), rs.getDouble("pro_price"), rs.getInt("pro_quantity"), rs.getInt("pro_discount"));
		}
		
		System.out.println(customer.getName());
		
		try
		{
			pst2 = cn.prepareStatement("Select * from cart where name = ?");
			pst2.setString(1, customer.getName());
			ResultSet rs1 = pst5.executeQuery();
			while(rs1.next()) 
			{
				if (rs1.getInt("pro_id") == pid) 
				{
					pst3 = cn.prepareStatement("Update cart set quantity = ? where usernmae = ? and p_id = ?");
					pst3.setInt(1, rs1.getInt("quantity") + product.getPro_quantity());
					pst3.setString(2, customer.getName());
					pst3.setInt(3, product.getPro_id());
					pst3.execute();
					DBUtils.closedConnection();
					return;
				}
			}
		}
		catch(Exception e)
		{
			
		}
		
		pst1 = cn.prepareStatement("Insert into cart values(?,?,?,?,?,?)");
		pst1.setString(1, customer.getName());
		pst1.setInt(2, product.getPro_id());
		pst1.setString(3, product.getPro_name());
		pst1.setDouble(4, product.getPro_price());
		pst1.setInt(5, product.getPro_quantity());
		pst1.setInt(6,  product.getPro_discount());
		pst1.execute();
		DBUtils.closedConnection();
	}
	
	public List<Product> showProducts() throws SQLException, ClassNotFoundException
	{
		cn = DBUtils.openConnection();
		List<Product> list = new ArrayList<>();
		pst2 = cn.prepareStatement("Select * from product");
		ResultSet rs = pst2.executeQuery();
		while(rs.next())
		{
			list.add(new Product(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getInt(4), rs.getInt(5)));
		}
		System.out.println("Show Products");
		DBUtils.closedConnection();
		return list;
	}
	
	public Cart displayCart(Product product, Customer customer) throws SQLException, ClassNotFoundException
	{
		cn = DBUtils.openConnection();
		Cart cart = new Cart();
		pst1 = cn.prepareStatement("Select * from cart where username = ?");
		pst1.setString(1, customer.getName());
		ResultSet rs = pst1.executeQuery();
		
		while(rs.next()) 
		{
			product = new Product(rs.getInt("pro_id"), rs.getString("pro_name"), rs.getDouble("pro_price"), rs.getInt("pro_quantity"), rs.getInt("pro_discount"));
			cart.addToCart();
		}
		DBUtils.closedConnection();
		return cart;
	}
	
	public double displayBill(Cart cart) 
	{
		double bill = 0;	
		for (Product p : cart.getCart()) 
		{
			bill += p.getPro_quantity() * (p.getPro_id() - p.getPro_discount());
		}
		return bill;
	}
	
	public List<Product> payBill(Cart cart) throws SQLException, ClassNotFoundException
	{
		double bill = 0;
		List<Product> ordered = new ArrayList<>();
		cn = DBUtils.openConnection();
		for (Product p : cart.getCart()) 
		{
			pst5 = cn.prepareStatement("Select * from Product where pro_id = ?");
			pst5.setInt(1, p.getPro_id());
			ResultSet res = pst5.executeQuery();
			if (res.next()) 
			{
				if (res.getInt("quantity") >= p.getPro_quantity()) 
				{
					ordered.add(p);
				}
			}
		}
		
		for (Product p : ordered) 
		{
			bill += p.getPro_quantity() * (p.getPro_id() - p.getPro_discount());
		}
		
		pst2 = cn.prepareStatement("Select * from customer where name = ?");
		pst2.setString(1, cart.getUsername());
		ResultSet rs = pst2.executeQuery();
		
		if (rs.next()) 
		{
			if (rs.getDouble("wallet") < bill) 
			{
				DBUtils.closedConnection();
				return null;
			}
		}
		
		for (Product p : ordered) {
			pst6 = cn.prepareStatement("Update product set pro_quantity = pro_quantity - ? where pro_id = ?");
			pst6.setInt(1, p.getPro_quantity());
			pst6.setInt(2, p.getPro_id());
			pst6.execute();
		}
		
		pst3 = cn.prepareStatement("Update customer set balance = balance - ? where name = ?");
		pst3.setDouble(1, bill);
		pst3.setString(2, cart.getUsername());
		pst3.execute();
		
		pst4 = cn.prepareStatement("Delete from cart where username = ?");
		pst4.setString(1, cart.getUsername());
		pst4.execute();
		
		return ordered;
	}
	
	public void addBalance(Customer customer, Double amount) throws SQLException, ClassNotFoundException 
	{
		cn = DBUtils.openConnection();
		pst3 = cn.prepareStatement("Update customer set balance = balance + ? where name = ?");
		pst3.setDouble(1, amount);
		pst3.setString(2, customer.getName());
		pst3.execute();
		DBUtils.closedConnection();
	}
	
	public double displayBalance(Customer customer) throws SQLException ,ClassNotFoundException
	{
		cn = DBUtils.openConnection();
		double wallet = 0;
		pst8 = cn.prepareStatement("Select * from customer where name = ?");
		pst8.setString(1, customer.getName());
		ResultSet rs = pst8.executeQuery();
		if(rs.next()) 
		{
			wallet = rs.getDouble("balance");
		}
		DBUtils.closedConnection();
		return wallet;
	}
}
