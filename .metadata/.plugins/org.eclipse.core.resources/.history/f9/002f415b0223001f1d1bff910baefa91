package in.mindcraft.service;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import in.mindcraft.pojo.Cart;
import in.mindcraft.pojo.Customer;
import in.mindcraft.pojo.Product;

@Service
public class CustomerService 
{
	private final JdbcTemplate jdbcTemplate;
	
	public CustomerService(JdbcTemplate jdbcTemplate)
	{
		this.jdbcTemplate = jdbcTemplate;
	}
	
	public Map<String, Object> addToCart(Cart cart)
	{
		String cartSql = "Insert into Cart (cart_id, username) values (?,?)";
        int cartId = jdbcTemplate.queryForObject("Select nextval('cart_seq')", int.class);
        int cartResult = jdbcTemplate.update(cartSql, cartId, cart.getUsername());

        for (Product product : cart.getCart()) 
        {
            String productSql = "Insert into Cart_Product (cart_id, pro_id, quantity) VALUES (?,?,?)";
            jdbcTemplate.update(productSql, cartId, product.getPro_id(), product.getPro_quantity());
        }

        Map<String, Object> response = new HashMap<>();
        if (cartResult > 0) 
        {
            response.put("status", "success");
            response.put("message", "Cart and Products Inserted Successfully!");
        } else {
            response.put("status", "error");
            response.put("message", "Failed to Insert Cart and Products!");
        }
        return response;
	}
	
	public List<Map<String, Object>> getCart(int cartId)
	{
		String sql = "Select p.* from Product p INNER JOIN Cart_Product cp ON p.pro_id = cp.pro_id WHERE cp.cart_id = ?";
        return jdbcTemplate.queryForList(sql, cartId);
	}
	
	public double displayBill(String username) 
	{
	    String sql = "Select sum(p.pro_cost - p.pro_discount) as bill from Product p INNER JOIN Cart_Product cp ON p.pro_id = cp.pro_id INNER JOIN Cart c ON cp.cart_id = c.cart_id WHERE c.username = ?";
	    return jdbcTemplate.queryForObject(sql, Double.class, username);
	}

	public List<Product> payBill(String username) throws SQLException {
	    double bill = displayBill(username);
	    List<Product> ordered = new ArrayList<>();
	    String selectSql = "Select p.* from Product p INNER JOIN Cart_Product cp ON p.pro_id = cp.pro_id INNER JOIN Cart c ON cp.cart_id = c.cart_id where c.username = ?";
	    List<Product> products = jdbcTemplate.query(selectSql, new Object[]{username}, (rs, rowNum) -> 
	    {
	        return new Product(rs.getInt("pro_id"), rs.getString("pro_name"), rs.getInt("pro_cost"), rs.getInt("pro_quantity"), rs.getInt("pro_discount"));
	    });

	    String customerSql = "Select balance from Customer where c_name = ?";
	    double balance = jdbcTemplate.queryForObject(customerSql, new Object[]{username}, Double.class);

	    if (balance < bill) 
	    {
	        return null;
	    }

	    for (Product p : products) 
	    {
	        if (p.getPro_quantity() >= p.getPro_quantity()) 
	        {
	            ordered.add(p);
	            jdbcTemplate.update("Update Product set pro_quantity = pro_quantity - ? where pro_id = ?", p.getPro_quantity(), p.getPro_id());
	        }
	    }

	    jdbcTemplate.update("Update Customer set balance = balance - ? where c_name = ?", bill, username);
	    jdbcTemplate.update("Delete from Cart where username = ?", username);

	    return ordered;
	}

    public void addBalance(String username, double amount) 
    {
        jdbcTemplate.update("Update Customer set balance = balance + ? where c_name = ?", amount, username);
    }

    public double displayBalance(String username) 
    {
        String sql = "Select balance from Customer where c_name = ?";
        return jdbcTemplate.queryForObject(sql, Double.class, username);
    }
}
