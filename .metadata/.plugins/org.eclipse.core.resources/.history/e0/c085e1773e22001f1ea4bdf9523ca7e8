package in.mindcraft.controller;

import org.springframework.web.bind.annotation.RestController;

import in.mindcraft.pojo.Cart;
import in.mindcraft.pojo.Customer;
import in.mindcraft.pojo.Product;
import in.mindcraft.service.CustomerService;
import jakarta.servlet.http.HttpSession;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;



@RestController
public class CustomerController 
{
	private final CustomerService customerService;
	
	public CustomerController(CustomerService customerService)
	{
		this.customerService = customerService;
	}
	
	//methods
	
	@PostMapping("/addToCart")
    public ResponseEntity<Map<String, Object>> addToCart(@RequestBody Cart cart) {
        Map<String, Object> response = customerService.addToCart(cart);
        if ("success".equals(response.get("status"))) {
            return ResponseEntity.ok(response);
        } else {
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(response);
        }
    }

    @GetMapping("/getFromCart")
    public List<Product> getFromCart(HttpSession session) 
    {
        Customer customer = (Customer) session.getAttribute("customer");
        Cart cart = customerService.displayCart(cart);
        return cart.getCart();
    }

    @GetMapping("/displayBill")
    public ResponseEntity<Map<String, Object>> displayBill(HttpSession session) 
    {
        Customer customer = (Customer) session.getAttribute("customer");
        Cart cart = customerService.displayCart(customer);
        double bill = customerService.displayBill(cart);
        Map<String, Object> response = new HashMap<>();
        response.put("bill", bill);
        return ResponseEntity.ok(response);
    }

    @PostMapping("/payBill")
    public ResponseEntity<Map<String, Object>> payBill(HttpSession session) 
    {
        Customer customer = (Customer) session.getAttribute("customer");
        Cart cart = customerService.displayCart(customer);
        List<Product> orderedProducts = customerService.payBill(cart);
        if (orderedProducts == null) {
            Map<String, Object> response = new HashMap<>();
            response.put("result", "Insufficient Balance in Wallet");
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(response);
        }
        double paidBill = customerService.displayBill(cart);
        Map<String, Object> response = new HashMap<>();
        response.put("result", "Payment successful");
        response.put("paid", paidBill);
        return ResponseEntity.ok(response);
    }
}
