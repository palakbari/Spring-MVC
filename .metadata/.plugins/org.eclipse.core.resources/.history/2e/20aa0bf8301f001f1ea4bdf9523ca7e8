package in.microsoft.controller;

import java.sql.SQLException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import in.microsoft.dao.CartDAO;
import in.microsoft.dao.CustomerDAO;
import in.microsoft.dao.ProductDAO;
import in.microsoft.pojos.Cart;
import in.microsoft.pojos.Customer;
import in.microsoft.pojos.Product;

@Controller
public class CustomerController 
{
	private ProductDAO pdao = new ProductDAO();
	private CartDAO cdao = new CartDAO();
	
	@RequestMapping("/addProductsToCart")
	public ModelAndView addProductsToCart(HttpServletRequest request, HttpServletResponse response, HttpSession session) throws SQLException, ClassNotFoundException
	{
		Customer customer = (Customer) session.getAttribute("customer");
		int pid = Integer.parseInt(request.getParameter("pid"));
		int quantity = Integer.parseInt(request.getParameter("quantity"));
		cdao.addProductsToCart(customer, pid, quantity);
		ModelAndView mv = new ModelAndView();
		mv.setViewName("add_products_to_cart.jsp");
		System.out.println("Adding Product(s)");
		return mv;
	}
	
	@RequestMapping("/getProductsToCart")
	public ModelAndView getProductsToCart(HttpServletRequest request, HttpServletResponse response) throws SQLException, ClassNotFoundException
	{
		ModelAndView mv = new ModelAndView();
		List<Product> products = cdao.showProducts();
		System.out.println("Adding Products In Cart");
		mv.setViewName("add_products_to_cart_success.jsp");	
		return mv;
	}
	
	@RequestMapping("/displayCart")
	public ModelAndView displayCart(HttpSession session) throws ClassNotFoundException, SQLException {
		Customer customer = (Customer) session.getAttribute("customer");
		
		Cart cart = cdao.displayCart(customer);
		
		ModelAndView mv = new ModelAndView();
		mv.setViewName("cart.jsp");
		mv.addObject("cart", cart.getCart());
		return mv;
	}
	
	@RequestMapping("/removeProductsFromCart")
	public ModelAndView removeProducts() 
	{
		ModelAndView mv = new ModelAndView();
		mv.setViewName("remove_products_from_cart.jsp");
		System.out.println("Removing Product(s)");	
		return mv;
	}
	
	@RequestMapping("/deleteProduct")
	public ModelAndView deleteProduct(HttpServletRequest request, HttpServletResponse response) throws ClassNotFoundException, SQLException {
		ModelAndView mv = new ModelAndView();
		String name = request.getParameter("productName");
		System.out.println("Getting Product Remove");
		pdao.removeProducts(name);
		mv.setViewName("remove_product_from_cart_success.jsp");
		return mv;
	}
	
	@RequestMapping("/addBalance")
	public ModelAndView addBalance(HttpSession session, HttpServletRequest request) throws ClassNotFoundException, SQLException {
		Customer customer = (Customer) session.getAttribute("customer");
		
		double amount = Double.parseDouble(request.getParameter("amount"));
		
		customerDAO.addBalance(customer, amount);
		customer.addBalance(amount);
		session.setAttribute("customer", customer);
		
		ModelAndView mv = displayBalance(session);
		mv.addObject("result", amount + " added to Wallet successfully!");
		return mv;
	}
	
	@RequestMapping("/displayBalance")
	public ModelAndView displayBalance(HttpSession session) throws ClassNotFoundException, SQLException {
		Customer customer = (Customer) session.getAttribute("customer");
		
		double balance = customerDAO.displayBalance(customer);
		
		ModelAndView mv = new ModelAndView();
		mv.setViewName("balance.jsp");
		mv.addObject("balance",  balance);
		return mv;
	}
	
	@RequestMapping("/payBill")
	public ModelAndView payBill(HttpSession session) throws ClassNotFoundException, SQLException {
		ModelAndView mv = displayBill(session);
		
		Customer customer = (Customer) session.getAttribute("customer");
		
		Cart cart = cartDAO.displayCart(customer);
		
		List<Product> ordered = cartDAO.payBill(cart);
		
		if (ordered == null) {
			mv.addObject("result", "Insufficient Balance in Wallet");
			mv.addObject("paid", 0);
			return mv;
		}
		else if (ordered.size() == cart.getCart().size()) {
			mv.addObject("result", "All items order succesfully!");
			mv.addObject("paid", cartDAO.displayBill(cart));
			return mv;
		}
		else {
			Cart orderedCart = new Cart(customer.getUsername(), ordered);
			List<Product> unordered = new ArrayList<>();
			for (Product p : cart.getCart()) {
				if (!(ordered.contains(p))) {
					unordered.add(p);
				}
			}
			mv.addObject("result", "Items order succesfully! Some items were not ordered due to unavailability:");
			mv.addObject("unordered", unordered);
			mv.addObject("paid", cartDAO.displayBill(orderedCart));
			return mv;
		}
		
		@RequestMapping("/displayBill")
		public ModelAndView displayBill(HttpSession session) throws ClassNotFoundException, SQLException {
			Customer customer = (Customer) session.getAttribute("customer");
			
			Cart cart = cartDAO.displayCart(customer);
			double bill = cartDAO.displayBill(cart);
			
			ModelAndView mv = new ModelAndView();
			mv.setViewName("bill.jsp");
			mv.addObject("bill", bill);
			return mv;
		}
}
